import java.io.*;
import java.util.*;

public class Main{
    public static void main(String[] args) throws IOException{
        //입력값 처리하는 BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //결과값 출력하는 BufferedWriter
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine(), " ");
        int N = Integer.parseInt(st.nextToken());
        int M = Integer.parseInt(st.nextToken());
        ArrayList<Integer> list = new ArrayList<>();	//자연수 저장 List
        st = new StringTokenizer(br.readLine()," ");
        HashSet<Integer> set = new HashSet<>();	//숫자 중복 확인 HashSet
        LinkedHashSet<String> answer = new LinkedHashSet<>();	//수열 저장 LinkedHashSet
        //입력되는 자연수 저장
        for(int i=0;i<N;i++){
            int num = Integer.parseInt(st.nextToken());
            if(!set.contains(num)){	//중복되지 않은 자연수 일 때
                set.add(num);
                list.add(num);
            }
        }
        Collections.sort(list);	//자연수 오름차순 정렬
        search(list, answer,0,0, M, "");	//수열 모든 경우 탐색!
        //수열에 대한 정보 BufferedWriter 저장
        for(String str : answer)
            bw.write(str + "\n");
        bw.flush();		//결과 출력
        bw.close();
        br.close();
    }
    //중복 선택 가능한 모든 수열 백트래킹으로 탐색하는 함수
    static void search(ArrayList<Integer> list, LinkedHashSet<String> answer, int cur,int count, int end, String str){
        if(count == end){		//수열 완성시!
            answer.add(str);	//LinkedHashSet을 통해 중복 확인 및 저장!
            return;
        }
        //수열 탐색!
        for(int i=cur;i<list.size();i++){
            String temp = str + list.get(i);
            if(count != end - 1)
                temp += " ";
           search(list,answer,  i,count+1, end, temp);
        }
    }
}
