import java.io.*;
import java.util.*;


public class Main {
    //강의 수업 관련 클래스
    static class time implements Comparable<time>{
        int start, end;
        public time(int start, int end){
            this.start = start;
            this.end = end;
        }
        //수업 관련 오름차순 정렬
        @Override
        public int compareTo(time o) {
            if(this.start == o.start)
                return this.end - o.end;
            return this.start  - o.start;
        }
    }
    static int N;
    //강의실 배정에 사용할 PriorityQueue
    static PriorityQueue<Integer> pq = new PriorityQueue<>();
    //강의 시간 저장 배열
    static time[] arr;
    public static void main(String[] args) throws IOException{
        //입력값 처리하는 BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //결과값 출력하는 BufferedWriter
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st;
        N = Integer.parseInt(br.readLine());
        arr = new time[N];
        //강의 시간 저장
        for(int i=0;i<N;i++){
            st = new StringTokenizer(br.readLine()," ");
            int s = Integer.parseInt(st.nextToken());
            int e = Integer.parseInt(st.nextToken());
            arr[i] = new time(s, e);
        }
        Arrays.sort(arr);		//강의 시간 정렬
        pq.add(arr[0].end);	//첫 강의 강의실 배정
        //나머지 강의 강의실 배정
        for(int i=1;i<N;i++){
            //강의실 끝나는 시간 ≤ 현 강의 시작 시간일 때
            if(arr[i].start >= pq.peek())
                pq.poll();
            //강의실 추가 배정
            pq.add(arr[i].end);
        }
        bw.write(pq.size() + "");	//사용한 강의실 BufferedWriter 저장
        bw.flush();		//결과 출력
        bw.close();
        br.close();
    }
}
