import java.io.*;
import java.util.*;
public class Main{
	public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //BufferedReader를 통해 입력 값 받기
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
       	//BufferedWriter를 통해 결과 출력
    	int index = Integer.parseInt(br.readLine());
    	StringTokenizer st;
    	for(int i=0;i<index;i++) {
    		st = new StringTokenizer(br.readLine()," ");	//띄어쓰기 기준 나누기
    		int x1 = Integer.parseInt(st.nextToken());	//값 저장
    		int y1 = Integer.parseInt(st.nextToken());
    		int r1 = Integer.parseInt(st.nextToken());
    		int x2 = Integer.parseInt(st.nextToken());
    		int y2 = Integer.parseInt(st.nextToken());
    		int r2 = Integer.parseInt(st.nextToken());
    		int d = (int) (Math.pow(x2-x1, 2) + Math.pow(y2-y1, 2));	//좌표 거리 구하기
    		bw.write(IntersectionPoint(r1, r2, d) + "\n");	//교점 bw에 저장하기
    	}
    	bw.flush();
    	bw.close();
    	br.close();	
	}
	public static String IntersectionPoint(int r1, int r2, int d) {		//교점 확인 함수
		if(d==0 && r1==r2 )	//무수히 많을 때
			return "-1";
		else if(Math.pow(r1+r2, 2)==d || Math.pow(r1-r2,2)==d)	//교점 1개일 때
			return "1";
		else if(Math.pow(r1+r2, 2)<d || Math.pow(r1-r2,2)>d || (d==0 && r1!=r2))//교점0개일 때
			return "0";
		else		//교점 2개일 때
			return "2";
	}
}
