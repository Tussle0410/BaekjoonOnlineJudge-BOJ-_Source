import java.io.*;
public class Main{
	static Integer[][] check;	//메모이제이션 배열
	static Integer[] stair;		//계단 배열
	static int index;
	public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //BufferedReader를 통해 입력 값 받기
        //------------입력값 저장 및 배열 초기화------------
    	index = Integer.parseInt(br.readLine());
    	stair = new Integer[index+1];
    	check = new Integer[index+1][3];
    	stair[0] = 0;		//시작 위치는 숫자가 없음
    	for(int i=1;i<=index;i++) 
    		stair[i] = Integer.parseInt(br.readLine());
    	
    	System.out.println(stairCal(0, 0) + "\n");	//결과 출력
    	br.close();
	}
    //------------계단 오르기 최대값 구하는 함수--------------
	public static Integer stairCal(int depth, int stack) {
		if(depth>index)
			return -10000;	//도착점 넘어갈때
		
		if(depth==index)	//도착점에 왔을 때
			return stair[depth];
	
		if(check[depth][stack]!=null)	//메모이제이션에 값 존재시
			return check[depth][stack];
		
		if(stack==2)	//연속 2번 1칸으로 계단올랐을 때
			check[depth][stack] = stairCal(depth+2, 1) + stair[depth];
		else	//재귀
			check[depth][stack] = Math.max(stairCal(depth+1, stack+1), 
            stairCal(depth+2, 1)) + stair[depth];

		return check[depth][stack];	//결과 반환
		}
	}
