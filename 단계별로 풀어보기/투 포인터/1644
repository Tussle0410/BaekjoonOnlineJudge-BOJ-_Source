import java.io.*;
public class Main{
	static boolean[] notDecimal;
    public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //입력값 처리하는 BufferedReader
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        //결과값 출력하는 BufferedWriter
    	int N = Integer.parseInt(br.readLine());
    	notDecimal = new boolean[N+1];
        //에라토스테네스의 체 구현 반복문
    	for(int i=2;i<=Math.sqrt(N);i++) {
    		if(!notDecimal[i]) {
        		for(int j=2;i*j<=N;j++)
        			notDecimal[i*j] = true;
    		}
    	}
    	int result = cal(N);		//함수 실행 및 결과 저장
    	bw.write(result + "\n");		//경우의 수 BufferedWriter 저장
    	bw.flush();		//결과 출력
    	bw.close();
    	br.close();
    }
    //투 포인터 알고리즘을 이용하여 소수 합이 N이 되는 경우의 수 구하는 함수
    static int cal(int N) {
    	int start = 2;		//포인터 Start
    	int end = 2;		//포인터 End
    	int count = 0;		//경우의 수
    	int sum = 2;		//현재 범위 소수의 합
    	while(end<=N) {
    		if(sum < N) {	//규칙 1.
    			for(;;) {	//다음 소수를 찾기 위해 반복문 사용
    				end++;
        			if(end>N)
        				return count;
        			if(!notDecimal[end]) {
        				sum += end;		//범위 소수의 합 조정
        				break;
        			}
    			}
    		}else {		//규칙1, 규칙2
    			if(sum==N)		//규칙1 Count + 1 
    				count++;
    			
       			sum =  sum - start;		//범위 소수의 합 조정
    			for(;;) {		//다음 소수를 찾기 위해 반복문 사용
    				start++;
    				if(start>N)
    					return count;
    				if(!notDecimal[start])
    					break;
    			}
    		}
    	}
    	return count;		//경우의 수 반환
    }
}
