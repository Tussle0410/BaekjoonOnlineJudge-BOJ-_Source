import java.io.*;
import java.util.*;

public class Main {
	static int n,m,result=0;
	static int[] root;	//루트 노드 저장하는 배열
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        	//입력값 처리하는 BufferedReader
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        	//결과값 출력하는 BufferedWriter
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		n = Integer.parseInt(st.nextToken());
		m = Integer.parseInt(st.nextToken());
		root = new int[n];
        	//루트 노드 초기화
		for(int i=0;i<n;i++) 
			root[i] = i;
		//선분의 입력값 저장
		for(int i=0;i<m;i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
            		//루트 노드 동일한지 확인 및 루트 노드 변경
			if(union(a,b)) {
				result = i+1;	//루트 노드 동일하면 횟수 저장
				break;
			}
		}
		bw.write(result + "\n");	//횟수 BufferedWriter 저장
		bw.flush();	//결과 출력
		bw.close();
		br.close();
	}
    	//루트 노드 찾는 함수
	static int find(int n) {
		if(n==root[n])
			return n;
		return root[n] = find(root[n]);
	}
    	//루트 노드 비교 및 변경하는 함수
	static boolean union(int a, int b) {
		int x = find(a);
		int y = find(b);
		if(x==y) {
			return true;
		}
		if(x!=y) {
			if(x<y)
				root[y] = x;
			else
				root[x] = y;
		}
		return false;
	}
}
