import java.io.*;
import java.util.*;
public class Main{
	//BFS에 사용하는 큐에 생성자
	static class move{
		String process;		//명령어 과정 저장 변수
		int num;		//현재 숫자 저장 변수
		public int getNum() {
			return num;
		}
		public String getProcess() {
			return process;
		}
		public move(String process, int num) {
			this.process = process;
			this.num = num;
		}
	}
	static int T;		//테스트 개수 저장 변수
	static boolean[] visited;		//해당 숫자 방문 확인 배열
	public static void main(String[] arg) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        	//입력값 처리하는 BufferedReader
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        	//결과값 출력하는 BufferedWriter
		StringTokenizer st;
		T = Integer.parseInt(br.readLine());
		for(int i=0;i<T;i++) {
			st = new StringTokenizer(br.readLine()," ");
			visited = new boolean[10000];		//숫자 방문 배열 초기화
			int A = Integer.parseInt(st.nextToken());
			int B = Integer.parseInt(st.nextToken());
			String result = bfs(A,B);		//BFS탐색하는 함수 실행 및 결과 저장
			bw.write(result + "\n");		//프로세스 BufferedWriter 저장
		}
		bw.flush();		//결과 출력
		bw.close();
		br.close();
	}
    	//-------BFS와 DSLR명령어를 이용하여 최단 프로세스를 구하는 함수-------
	static String bfs(int start, int end) {
		Queue<move> queue = new LinkedList<move>();	
		queue.add(new move("", start));		//초기값 저장
		while(!queue.isEmpty()) {
			move temp = queue.poll();
			int num = temp.getNum();
			String process = temp.getProcess();
			if(num == end)		//B 숫자 도착했을 때
				return process;
			
			int n = (num*2)%10000;		//명령어 D
			if(!visited[n]) {
				visited[n] = true;
				queue.add(new move(process + "D",n));
			}
			n = num-1<0?9999:num-1;		//명령어 S
			if(!visited[n]) {
				visited[n] = true;
				queue.add(new move(process + "S", n));
			}
			n = num/1000 + (num%1000)*10;	//명령어 L
			if(!visited[n]) {
				visited[n] = true;
				queue.add(new move(process + "L", n));
			}
			n = num/10 + (num%10)*1000;		//명령어 R
			if(!visited[n]) {
				visited[n] = true;
				queue.add(new move(process + "R", n));
			}
		}
		return "";
	}

}
