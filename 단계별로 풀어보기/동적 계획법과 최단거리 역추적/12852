import java.io.*;
import java.util.*;
public class Main{
	static int N;
	static int[] count,process;	//최소 연산횟수 저장 배열, 연산 이전 값 저장 배열
    public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //입력값 처리하는 BufferedReader
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        //결과값 출력하는 BufferedWriter
        //---------입력값 저장 및 배열 초기화-------
    	N = Integer.parseInt(br.readLine());
    	count = new int[N+1];
    	process = new int[N+1];
    	Arrays.fill(count, Integer.MAX_VALUE);
    	count[1] = 0;	//1은 연산횟수가 0으로 초기화
    	cal();	//count와 process 구성하는 함수 실행
    	bw.write(count[N]+ "\n");	//최소 연산 횟수 BufferedWriter 저장
    	int index = N;
        //process의 값이 1이 될 때까지의 과정 BufferedWriter 저장
    	while(index != 0) {
    		bw.write(index + " ");
    		index = process[index];
    	}
    	bw.flush();		//결과 출력
    	bw.close();
    	br.close();
    }
    //count와 process를 구성하는 함수
    static void cal() {
    	//count규칙을 적용하면서 같이 process의 값도 저장 진행
    	for(int i=2;i<=N;i++) {
    		if(i%3==0) {		//count 규칙1.
    			count[i] = count[i/3] + 1;
    			process[i] = i/3;
    		}
    		if(i%2==0) {		//count 규칙2.
    			if(count[i/2] + 1 < count[i]) {
    				count[i] = count[i/2] + 1;
    				process[i] = i/2;
    			}
    		}
            //count 규칙3.
    		if(count[i-1] + 1 < count[i]) {
    			count[i] = count[i-1] + 1;
    			process[i] = i-1;
    		} 		
    	}
    	return;
    }    	   
}
