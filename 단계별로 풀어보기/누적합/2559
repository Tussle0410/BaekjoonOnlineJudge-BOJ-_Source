import java.io.*;
import java.util.*;
public class Main{
	static int N,K;
	static int[] num, DP;	//온도 저장 배열, 누적합 저장 배열
	public static void main(String[] arg) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //입력값 처리하는 BufferedReader
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        //결과값 출력하는 BufferedWriter
       	//------입력값 저장 및 배열 초기화
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		num = new int[N+1];
		DP = new int[N+1];
		st = new StringTokenizer(br.readLine()," ");
		for(int i=1;i<=N;i++) {
			num[i] = Integer.parseInt(st.nextToken());	//온도 저장
			DP[i] = DP[i-1] + num[i];		//누적합 저장
		}
		int result = cal();		//함수 실행 및 최대값 저장
		bw.write(result + "\n");		//최대값 BufferedWriter 저장
		bw.flush();		//결과 출력
		bw.close();
		br.close();
	}
    //K일 연속 온도의 합의 최대값을 구하는 함수
	static int cal() {
		int max = Integer.MIN_VALUE;		//최대값 초기화
		for(int i=0;i<=N-K;i++) {
			int temp = DP[i+K] - DP[i];		//규칙
			max = Math.max(max, temp);		//최대값 비교하기
		}
		return max;		//최대값 반환
	}
}
