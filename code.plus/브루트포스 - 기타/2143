import java.io.*;
import java.util.*;

public class Main{
	static int T, n, m;
	static long[] A,B;	//배열 A, B
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        	//입력값 처리하는 BufferedReader
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        	//결과값 출력하는 BufferedWriter
		StringTokenizer st;
		T = Integer.parseInt(br.readLine());
		n = Integer.parseInt(br.readLine());
		A = new long[n+1];
		st = new StringTokenizer(br.readLine()," ");
        	//A배열 누적합 구하기
		for(int i=1;i<=n;i++)
			A[i] = A[i-1]+Integer.parseInt(st.nextToken());
		
		m = Integer.parseInt(br.readLine());
		B = new long[m+1];
		st = new StringTokenizer(br.readLine()," ");
        	//B배열 누적합 구하기
		for(int i=1;i<=m;i++)
			B[i] = B[i-1] + Integer.parseInt(st.nextToken());
            
		ArrayList<Long> sumA = new ArrayList<>();
		ArrayList<Long> sumB = new ArrayList<>();
		
		sumCal(sumA, A);	//A 부 배열의 합 모든 경우 구하기
		sumCal(sumB, B);	//B 부 배열의 합 모든 경우 구하기
			//부 배열의 합 오름차순 정렬
		Collections.sort(sumA);
		Collections.sort(sumB);
		long result = compare(sumA, sumB);	//합이 T가 되는 경우 구하기
		bw.write(result + "\n");		//T가되는 횟수 BufferedWriter 저장
		bw.flush();		//결과 출력
		bw.close();
		br.close();
	}
    	//두 부 배열의 합이 T가 되는 횟수를 구하는 두 포인터 함수
	static long compare(ArrayList<Long> A, ArrayList<Long> B) {
		long count = 0;
		int aIdx = 0;	//A 부 배열 시작 Index
		int bIdx = B.size()-1;	//B 부 배열 시작 Index
		while(true) {
			if(aIdx>=A.size() || bIdx <0)	//부 배열 범위 벗어날 때
				break;
			long a = A.get(aIdx);
			long b = B.get(bIdx);
			long sum = a+b;
			if(T==sum) {	//합이 T가 되었을 때
				long aCount = 0;
                		//While문으로 반복하는 이유는 동일한 값이 존재할 수 있기 때문입니다.
				while(aIdx<A.size() && A.get(aIdx) == a) {
					aCount++;
					aIdx++;
				}
				long bCount = 0;
				while(bIdx>=0 && B.get(bIdx)==b) {
					bCount++;
					bIdx--;
				}
				count += aCount * bCount;
			}
			if(T>sum)	//합이 T보다 작을 경우 aIndex++
				aIdx++;
			else if(T<sum)	//합이 T보다 클 경우 bIndex--
				bIdx--;
		}
		return count;		//횟수 반환
	}
    	//누적합을 이용하여 부 배열의 합 모든 경우 구하는 함수
	static void sumCal(ArrayList<Long> list, long[] arr) {
		for(int i=arr.length-1;i>0;i--) {
			for(int j=0;j<i;j++) {
				list.add(arr[i] - arr[j]);
			}
		}
	}
}

