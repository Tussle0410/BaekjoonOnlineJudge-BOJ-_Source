import java.io.*;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main {
    static ArrayList<Integer> A = new ArrayList<>();	//A의 숫자들 저장 리스트
    static boolean[] visited;	//해당 숫자 사용 확인 배열
    static int B, answer = -1;
    public static void main(String[] args) throws IOException {
        //입력값 처리하는 BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //결과값 출력하는 BufferedWriter
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine()," ");
        String str = st.nextToken();
        //A에 숫자들 저장
        for(int i=0;i<str.length();i++)
            A.add(Character.getNumericValue(str.charAt(i)));
        B = Integer.parseInt(st.nextToken());
        if(B / (10*A.size()) != 0){		//자릿수 확인
            visited = new boolean[A.size()];

            //C의 모든 경우에서 조건에 만족하는지 확인 및 최대값 구하기
            for(int i=0;i<A.size();i++){
                if(A.get(i)!=0){
                    visited[i] = true;
                    cal(1, A.get(i));
                    visited[i] = false;
                }
            }
        }
        bw.write(answer + "");	//최대값 BufferedWrtier 저장
        bw.flush();		//결과 출력
        bw.close();
        br.close();
    }
    //C의 모든 경우에 조건이 만족하는 최대값을 구하는 함수
    static void cal(int depth, int value){
        if(depth == A.size()){
            if(value < B)
                answer = Math.max(answer, value);
            return;
        }
        for(int i=0;i<A.size();i++){
            if(visited[i])
                continue;
            visited[i] = true;
            cal(depth + 1, value * 10 + A.get(i));
            visited[i] = false;
        }
    }
}

