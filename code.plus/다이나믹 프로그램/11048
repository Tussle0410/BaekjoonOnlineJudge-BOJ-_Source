import java.util.*;
import java.io.*;

public class Main {
    static int N,M;
    static int[][] maze;	//미로 정보 저장 배열
    static int[][] DP;		//메모이제이션 배열
    static int[] dx = {1, 0};	//→, ↓에 대한 x변경값
    static int[] dy = {0, 1};	//→, ↓에 대한 y변경값
    public static void main(String[] args) throws IOException {
        //입력값 처리하는 BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //결과값 출력하는 BufferedWriter
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st = new StringTokenizer(br.readLine(), " ");
        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());
        maze = new int[N+1][M+1];
        DP = new int[N+1][M+1];
        //1. 입력되는 연구소의 정보를 저장합니다.
        for(int i=1;i<=N;i++){
            st = new StringTokenizer(br.readLine(), " ");
            for(int j=1;j<=M;j++){
                maze[i][j] = Integer.parseInt(st.nextToken());
            }
        }
        //2. (0, 0)을 기준으로 →, ↓으로 이동하면서 최소값들을 DP의 저장합니다.
        for(int i=1;i<=N;i++){
            for(int j=1;j<=M;j++){
                DP[i][j] = Math.max(maze[i][j] + DP[i-1][j], maze[i][j] + DP[i][j-1]);
            }
        }
        //3. 모든 이동이 끝난뒤 DP[N-1][M-1]을 결과로 출력합니다.
        bw.write(DP[N][M] + "");
        bw.flush();
        bw.close();
        br.close();
    }
}
