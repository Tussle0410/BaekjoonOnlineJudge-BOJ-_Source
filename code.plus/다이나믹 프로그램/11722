import java.io.*;
import java.util.*;
public class Main{
	static int N;
	static int[] DP,sequence;	//메모제이션 배열, 수열 저장 배열
    public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //입력값 처리하는 BufferedReader
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        //결과값 출력하는 BufferedWriter
        //-------입력값 저장 및 배열 초기화-------
    	N = Integer.parseInt(br.readLine());
    	DP = new int[N+1];
    	sequence = new int[N+1];
    	StringTokenizer st = new StringTokenizer(br.readLine()," ");
    	for(int i=1;i<=N;i++) 
    		sequence[i] = Integer.parseInt(st.nextToken());
    	DP[1] = 1;		//DP[1]을 1으로 초기화
    	int result = cal();	//DP구성하는 함수 실행
    	bw.write(result + "\n");	//최대 길이 BufferedWriter 저장
    	bw.flush();		//결과 출력
    	bw.close();
    	br.close();
    }    	  
    //규칙을 통해 DP를 구성 및 최대 길이 반환하는 함수
    static int cal() {
    	int result = 1;
    	for(int i=1;i<=N;i++) {
    		for(int j=i-1;j>=1;j--) {
    			if(sequence[i]<sequence[j]) {	//규칙 적용
    				DP[i] = Math.max(DP[i], DP[j] + 1);
    				result = Math.max(DP[i], result);
    			}    			
    		}
    		if(DP[i] == 0)	//해당 값이 수열의 첫 번째 값일 때
    			DP[i] = 1;
    	}
    	return result;		//최대 길이 반환
    }
}
