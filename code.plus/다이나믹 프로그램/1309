import java.io.*;
public class Main{
	static int[][] DP;		//메모이제이션 배열
	static int DIV = 9901;		//나머지 구하기 위해 나누는 값
    public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //입력값 처리하는 BufferedReader
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        //결과값 출력하는 BufferedWriter
    	int N = Integer.parseInt(br.readLine());
    	DP = new int[N+1][3];
    	init();		//DP 초기화 함수 실행
    	cal(N);		//규칙을 통한 DP구성 함수 실행
    	int result = (DP[N][0] + DP[N][1] + DP[N][2])%DIV;	//모든 경우의수 나머지 값 구하기
    	bw.write(result + "\n");		//나머지값 BufferedWriter 저장
    	bw.flush();		//결과 출력
    	bw.close();
    	br.close();
    }
    //DP[1][0~2]의 값 초기화하하는 함수
    static void init() {
    	DP[1][0] = DP[1][1] = DP[1][2] = 1;
    	return;
    }
    //규칙을 통해 DP를 구성하는 함수
    static void cal(int N) {
    	for(int i=2;i<=N;i++) {
    		DP[i][0] = (DP[i-1][0] + DP[i-1][1] + DP[i-1][2])%DIV;	//규칙1.
    		DP[i][1] = (DP[i-1][0] + DP[i-1][2])%DIV;		//규칙2.
    		DP[i][2] = (DP[i-1][0] + DP[i-1][1])%DIV;		//규칙3
    	}
    	return;
    }
}
