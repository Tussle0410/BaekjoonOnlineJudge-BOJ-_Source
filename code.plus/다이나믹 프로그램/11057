import java.io.*;
import java.util.Arrays;
public class Main{
	static int[][] DP;	//메모이제이션 배열
	static int[] count;	//각 길이의 모든 경우의 수 저장하는 배열
	static int DIV = 10007;		//나머지를 구하기 위해 나누는 값
    public static void main(String[] args) throws IOException{
    	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        //입력값 처리하는 BufferedReader
    	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        //결과값 출력하는 BufferedWriter
        //---------입력값 저장 및 배열 초기화----------
    	int N = Integer.parseInt(br.readLine());
    	DP = new int[N+1][10];
    	count = new int[N+1];
    	count[1] = 10;
    	Arrays.fill(DP[1], 1);
    	cal(N);		//DP구성하는 함수 실행
    	bw.write(count[N] + "\n");		//모든 경우의 수 BufferedWriter 저장
    	bw.flush();		//결과 출력
    	bw.close();
    	br.close();  	
    }
    //규칙을 적용하여 반복문으로 DP 구성하는 함수
    static void cal(int N) {
    	for(int i=2;i<=N;i++) {
    		int sum = 1;
    		DP[i][0] = 1;
    		for(int j=1;j<10;j++) {
    			DP[i][j] = (DP[i][j-1] + DP[i-1][j])%DIV;	//규칙 1
    			sum = sum + DP[i][j];			//경우의 수 더하기
    		}
    		count[i] = sum % DIV;		//해당 길이 모든 경우의 수 저장
    	}
    	return;
    }
}
