import java.util.*;
import java.io.*;
public class Main {
	static int N,M,result = 0;
	static int[][] arr;		//정육면체 정보 저장
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        	//입력값 처리하는 BufferedReader
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        	//결과값 출력하는 BufferedWriter
		StringTokenizer st = new StringTokenizer(br.readLine()," ");
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		arr = new int[N+2][M+2];
        	//정육면체 정보 저장
		for(int i=1;i<=N;i++) {
			st = new StringTokenizer(br.readLine()," ");
			for(int j=1;j<=M;j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
				if(arr[i][j]!=0)	//윗면 아랫면 겉넓이 구하기
					result+=2;
			}
		}
		cal();		//윗면, 아랫면 이외의 면 겉넓이 구하기 함수 실행
		bw.write(result + "\n");		//모든 겉넓이의 합 BufferedWriter 저장
		bw.flush();		//결과 출력
		bw.close();
		br.close();
	}
    	//윗면, 아랫면 이외의 면 겉넓이 구하기 함수 실행
	static void cal() {
    		//윗면을 중심으로 남쪽 면
		for(int i=1;i<=N;i++) {
			for(int j=1;j<=M;j++) {
				if(arr[i][j]> arr[i][j-1]) 
					result = result +  (arr[i][j] - arr[i][j-1]);
			}
		}
        	//윗면을 중심으로 서쪽 면
		for(int i=1;i<=M;i++) {
			for(int j=1;j<=N;j++) {
				if(arr[j][i] > arr[j-1][i])
					result = result + (arr[j][i] - arr[j-1][i]);
			}
		}
        	//윗면을 중심으로 동쪽 면
		for(int i=N;i>0;i--) {
			for(int j=M;j>0;j--) {
				if(arr[i][j] > arr[i][j+1]) {
					result = result + (arr[i][j] - arr[i][j+1]);
				}
			}
		}
        	//윗면을 중심으로 북쪽 면
		for(int i=M;i>0;i--) {
			for(int j=N;j>0;j--) {
				if(arr[j][i] > arr[j+1][i])
					result = result + (arr[j][i] - arr[j+1][i]);
			}
		}
		return;
	}
}

